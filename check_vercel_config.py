#!/usr/bin/env python
"""
Test de la configuration Vercel pour Masco
"""
import os
import sys
import json

def check_file_exists(filepath, description):
    """V√©rifie si un fichier existe"""
    if os.path.exists(filepath):
        print(f"‚úÖ {description}: {filepath}")
        return True
    else:
        print(f"‚ùå {description}: {filepath} - MANQUANT")
        return False

def check_vercel_config():
    """V√©rifie la configuration Vercel"""
    print("üîç V√âRIFICATION DE LA CONFIGURATION VERCEL")
    print("=" * 50)
    
    all_good = True
    
    # Fichiers essentiels
    files_to_check = [
        ("vercel.json", "Configuration Vercel"),
        ("wsgi.py", "Point d'entr√©e WSGI"), 
        ("requirements.txt", "D√©pendances Python"),
        ("manage.py", "Gestionnaire Django racine"),
        ("build.py", "Script de build"),
        ("backend/__init__.py", "Module backend"),
        ("backend/Bac/__init__.py", "Sous-module Bac"),
        ("VERCEL_DEPLOYMENT_GUIDE.md", "Guide de d√©ploiement")
    ]
    
    for filepath, description in files_to_check:
        if not check_file_exists(filepath, description):
            all_good = False
    
    # V√©rification du contenu vercel.json
    print("\nüîß V√âRIFICATION DU CONTENU vercel.json:")
    if os.path.exists("vercel.json"):
        try:
            with open("vercel.json", "r") as f:
                config = json.load(f)
            print("‚úÖ vercel.json - JSON valide")
            
            # V√©rifications sp√©cifiques
            if "builds" in config:
                print("‚úÖ Section 'builds' pr√©sente")
            if "routes" in config:
                print("‚úÖ Section 'routes' pr√©sente")
            if "env" in config:
                print("‚úÖ Variables d'environnement configur√©es")
                
        except json.JSONDecodeError:
            print("‚ùå vercel.json - JSON INVALIDE")
            all_good = False
    
    # V√©rification structure Django
    print("\nüèóÔ∏è V√âRIFICATION STRUCTURE DJANGO:")
    django_files = [
        "backend/Bac/myblog_project/manage.py",
        "backend/Bac/myblog_project/myblog_project/settings.py",
        "backend/Bac/myblog_project/myblog_project/wsgi.py",
        "backend/Bac/myblog_project/blog/models.py"
    ]
    
    for filepath in django_files:
        check_file_exists(filepath, f"Django - {os.path.basename(filepath)}")
    
    # V√©rification assets
    print("\nüñºÔ∏è V√âRIFICATION DES ASSETS:")
    assets_dirs = [
        "backend/Bac/myblog_project/blog/static/blog/images",
        "backend/Bac/myblog_project/blog/static/blog/videos",
        "backend/Bac/myblog_project/blog/static/blog/css"
    ]
    
    for dirpath in assets_dirs:
        if os.path.exists(dirpath):
            count = len([f for f in os.listdir(dirpath) if os.path.isfile(os.path.join(dirpath, f))])
            print(f"‚úÖ {dirpath}: {count} fichiers")
        else:
            print(f"‚ùå {dirpath}: DOSSIER MANQUANT")
            all_good = False
    
    # Image partenaire ajout√©e
    partner_image = "backend/Bac/myblog_project/blog/static/blog/images/vice-ministere.jpg"
    if check_file_exists(partner_image, "Image Vice-Minist√®re"):
        print("‚úÖ Nouveau partenaire ajout√© avec succ√®s")
    
    print("\n" + "=" * 50)
    if all_good:
        print("üéâ CONFIGURATION VERCEL PR√äTE !")
        print("\nüìã PROCHAINES √âTAPES:")
        print("1. Repository Git push√© ‚úÖ")
        print("2. Aller sur vercel.com")
        print("3. Importer le repository 'energies'")
        print("4. Vercel d√©tectera automatiquement la config")
        print("5. Cliquer sur 'Deploy'")
        print("\nüåê Votre site Masco sera en ligne !")
    else:
        print("‚ùå CONFIGURATION INCOMPL√àTE")
        print("Veuillez corriger les erreurs avant de d√©ployer")
    
    return all_good

if __name__ == "__main__":
    # Aller dans le bon r√©pertoire
    if os.path.basename(os.getcwd()) != "Masco":
        masco_path = "d:/Maquettes/Masco"
        if os.path.exists(masco_path):
            os.chdir(masco_path)
        else:
            print("‚ùå Impossible de trouver le dossier Masco")
            sys.exit(1)
    
    success = check_vercel_config()
    sys.exit(0 if success else 1)
